openapi: '3.0.3'
info:
  title: Tuna Demand APIs
  version: '1.0'
  description: API for managing Projects, Surveys, Quotas and Quota Conditions
servers:
  - url: https://localhost:9001/api/v1
  - url: https://{customerId}.com:{port}/api/v1
    variables:
      customerId:
        default: localhost
        description: Customer ID assigned by the service provider
      port:
        enum:
          - '9000'
          - '9001'
        default: '9001'
tags:
  - name: Projects
    description: Project management
  - name: Surveys
    description: Survey management
  - name: Quotas
    description: Survey quota management

paths:
  /projects:
    get:
      tags: [Projects]
      summary: List all projects
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/searchQuery'
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags: [Projects]
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /projects/{id}:
    get:
      tags: [Projects]
      summary: Get a project by ID
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags: [Projects]
      summary: Update a project
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags: [Projects]
      summary: Delete a project
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /projects/{projectId}/surveys:
    get:
      tags: [Surveys]
      summary: List all surveys
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/searchQuery'
      responses:
        '200':
          description: List of surveys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags: [Surveys]
      summary: Create a new survey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyCreateRequest'
      responses:
        '201':
          description: Survey created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /surveys/{id}:
    get:
      tags: [Surveys]
      summary: Get a survey by ID
      parameters:
        - $ref: '#/components/parameters/surveyId'
      responses:
        '200':
          description: Survey details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags: [Surveys]
      summary: Update a survey
      parameters:
        - $ref: '#/components/parameters/surveyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyUpdateRequest'
      responses:
        '200':
          description: Survey updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags: [Surveys]
      summary: Delete a survey
      parameters:
        - $ref: '#/components/parameters/surveyId'
      responses:
        '200':
          description: Survey deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /surveys/{surveyId}/quotas:
    get:
      tags: [Quotas]
      summary: List all quotas for a survey
      parameters:
        - $ref: '#/components/parameters/surveyIdInPath'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: List of quotas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags: [Quotas]
      summary: Create a new quota for a survey
      parameters:
        - $ref: '#/components/parameters/surveyIdInPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaCreateRequest'
      responses:
        '201':
          description: Quota created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /surveys/{surveyId}/quotas/{quotaId}:
    get:
      tags: [Quotas]
      summary: Get a quota by ID
      parameters:
        - $ref: '#/components/parameters/surveyIdInPath'
        - $ref: '#/components/parameters/quotaId'
      responses:
        '200':
          description: Quota details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags: [Quotas]
      summary: Update a quota
      parameters:
        - $ref: '#/components/parameters/surveyIdInPath'
        - $ref: '#/components/parameters/quotaId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaUpdateRequest'
      responses:
        '200':
          description: Quota updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags: [Quotas]
      summary: Delete a quota
      parameters:
        - $ref: '#/components/parameters/surveyIdInPath'
        - $ref: '#/components/parameters/quotaId'
      responses:
        '200':
          description: Quota deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  
components:
  parameters:
    pageNumber:
      name: pageNumber
      in: query
      description: Page number
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1
    
    pageSize:
      name: pageSize
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
    
    searchQuery:
      name: searchQuery
      in: query
      description: Search query string
      required: false
      schema:
        type: string
    
    projectId:
      name: id
      in: path
      description: Project ID
      required: true
      schema:
        type: integer
    
    surveyId:
      name: id
      in: path
      description: Survey ID
      required: true
      schema:
        type: integer
    
    surveyIdInPath:
      name: surveyId
      in: path
      description: Survey ID
      required: true
      schema:
        type: integer
    
    quotaId:
      name: quotaId
      in: path
      description: Quota ID
      required: true
      schema:
        type: integer
    
    conditionId:
      name: conditionId
      in: path
      description: Quota condition ID
      required: true
      schema:
        type: integer

  schemas:
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
        message:
          type: string
          description: Response message
        request:
          type: object
          description: Request parameters
        data:
          type: object
          description: Response data
    
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
    
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        clientId:
          type: integer
          format: int32
        clientName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int32
          nullable: true
        updatedBy:
          type: integer
          format: int32
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        projectManager:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        projectTypeId:
          type: integer
          format: int32
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        isActive:
          type: boolean
          nullable: true
        projectManagerId:
          type: string
          nullable: true
        accountId:
          type: integer
          format: int32
          nullable: true
        panelId:
          type: integer
          format: int32
          nullable: true
        isProgrammatic:
          type: boolean
          nullable: true
    
    ProjectCreateRequest:
      type: object
      required:
        - name
        - clientId
        - startDate
        - endDate
      properties:
        name:
          type: string
        clientId:
          type: integer
          format: int32
        clientName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        projectManager:
          type: string
        projectTypeId:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
        isActive:
          type: boolean
        projectManagerId:
          type: string
        accountId:
          type: integer
          format: int32
        panelId:
          type: integer
          format: int32
        isProgrammatic:
          type: boolean
    
    ProjectUpdateRequest:
      type: object
      properties:
        name:
          type: string
        clientId:
          type: integer
          format: int32
        clientName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        projectManager:
          type: string
        projectTypeId:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
        isActive:
          type: boolean
        projectManagerId:
          type: string
        accountId:
          type: integer
          format: int32
        panelId:
          type: integer
          format: int32
        isProgrammatic:
          type: boolean
    
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                project:
                  $ref: '#/components/schemas/Project'
    
    ProjectListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                length:
                  type: integer
                  description: Number of projects returned
                projects:
                  type: array
                  items:
                    $ref: '#/components/schemas/Project'
    
    Survey:
      type: object
      properties:
        id:
          type: integer
          format: int32
        surveyName:
          type: string
        projectId:
          type: integer
          format: int32
        surveyLink:
          type: string
        ir:
          type: number
          format: float
        sampleTypeId:
          type: integer
          format: int32
          nullable: true
        sampleRequired:
          type: integer
          format: int32
          nullable: true
        sampleCalculationType:
          type: integer
          format: int32
        liveDate:
          type: string
          format: date-time
          nullable: true
        loi:
          type: string
          nullable: true
        cpi:
          type: number
          format: float
        languageId:
          type: integer
          format: int32
        isMobileAllowed:
          type: boolean
          nullable: true
        isDesktopAllowed:
          type: boolean
          nullable: true
        isTabletAllowed:
          type: boolean
          nullable: true
        clientId:
          type: integer
          format: int32
          nullable: true
        surveyStartDate:
          type: string
          format: date-time
          nullable: true
        surveyEndDate:
          type: string
          format: date-time
          nullable: true
        surveyTypeId:
          type: integer
          format: int32
        surveyUid:
          type: string
          format: uuid
        industryId:
          type: integer
          format: int32
        surveyStatusId:
          type: integer
          format: int32
          nullable: true
        clientLastUpdateUtc:
          type: integer
          format: int32
          nullable: true
        estimatedRevenue:
          type: number
          format: float
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        lastQualUpdatedAt:
          type: string
          format: date-time
          nullable: true
        lastQuotaUpdatedAt:
          type: string
          format: date-time
          nullable: true
        lastGroupUpdatedAt:
          type: string
          format: date-time
          nullable: true
        lastSurveyUpdatedAt:
          type: string
          format: date-time
          nullable: true
        isActive:
          type: boolean
          nullable: true
        clientSurveyId:
          type: string
          nullable: true
        minMargin:
          type: number
          format: float
          nullable: true
        surveyHash:
          type: string
          nullable: true
        qualHash:
          type: string
          nullable: true
        quotaHash:
          type: string
          nullable: true
        groupHash:
          type: string
          nullable: true
        buyerId:
          type: string
          nullable: true
        collectPii:
          type: boolean
          nullable: true
        allowRoutedTraffic:
          type: boolean
          nullable: true
        surveyTestLink:
          type: string
          nullable: true
        subBuyerId:
          type: string
          nullable: true
        exposeToSuppliers:
          type: boolean
          nullable: true
        surveyCategoryId:
          type: integer
          format: int32
          nullable: true
        accountId:
          type: integer
          format: int32
          nullable: true
        panelId:
          type: integer
          format: int32
          nullable: true
        sourceId:
          type: integer
          format: int32
          nullable: true
    
    SurveyCreateRequest:
      type: object
      required:
        - surveyName
        - projectId
        - ir
        - sampleCalculationType
        - cpi
        - languageId
        - surveyTypeId
        - surveyUid
        - industryId
      properties:
        surveyName:
          type: string
        projectId:
          type: integer
          format: int32
        surveyLink:
          type: string
        ir:
          type: number
          format: float
        sampleTypeId:
          type: integer
          format: int32
        sampleRequired:
          type: integer
          format: int32
        sampleCalculationType:
          type: integer
          format: int32
        liveDate:
          type: string
          format: date-time
        loi:
          type: string
        cpi:
          type: number
          format: float
        languageId:
          type: integer
          format: int32
        isMobileAllowed:
          type: boolean
        isDesktopAllowed:
          type: boolean
        isTabletAllowed:
          type: boolean
        clientId:
          type: integer
          format: int32
        surveyStartDate:
          type: string
          format: date-time
        surveyEndDate:
          type: string
          format: date-time
        surveyTypeId:
          type: integer
          format: int32
        surveyUid:
          type: string
          format: uuid
        industryId:
          type: integer
          format: int32
        surveyStatusId:
          type: integer
          format: int32
        clientLastUpdateUtc:
          type: integer
          format: int32
        estimatedRevenue:
          type: number
          format: float
        isActive:
          type: boolean
        clientSurveyId:
          type: string
        minMargin:
          type: number
          format: float
        buyerId:
          type: string
        collectPii:
          type: boolean
        allowRoutedTraffic:
          type: boolean
        surveyTestLink:
          type: string
        subBuyerId:
          type: string
        exposeToSuppliers:
          type: boolean
        surveyCategoryId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        panelId:
          type: integer
          format: int32
        sourceId:
          type: integer
          format: int32
    
    SurveyUpdateRequest:
      type: object
      properties:
        surveyName:
          type: string
        surveyLink:
          type: string
        ir:
          type: number
          format: float
        sampleTypeId:
          type: integer
          format: int32
        sampleRequired:
          type: integer
          format: int32
        sampleCalculationType:
          type: integer
          format: int32
        liveDate:
          type: string
          format: date-time
        loi:
          type: string
        cpi:
          type: number
          format: float
        languageId:
          type: integer
          format: int32
        isMobileAllowed:
          type: boolean
        isDesktopAllowed:
          type: boolean
        isTabletAllowed:
          type: boolean
        clientId:
          type: integer
          format: int32
        surveyStartDate:
          type: string
          format: date-time
        surveyEndDate:
          type: string
          format: date-time
        surveyStatusId:
          type: integer
          format: int32
        clientLastUpdateUtc:
          type: integer
          format: int32
        estimatedRevenue:
          type: number
          format: float
        isActive:
          type: boolean
        clientSurveyId:
          type: string
        minMargin:
          type: number
          format: float
        buyerId:
          type: string
        collectPii:
          type: boolean
        allowRoutedTraffic:
          type: boolean
        surveyTestLink:
          type: string
        subBuyerId:
          type: string
        exposeToSuppliers:
          type: boolean
        surveyCategoryId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        panelId:
          type: integer
          format: int32
        sourceId:
          type: integer
          format: int32
    
    SurveyResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                survey:
                  $ref: '#/components/schemas/Survey'
    
    SurveyListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                length:
                  type: integer
                  description: Number of surveys returned
                surveys:
                  type: array
                  items:
                    $ref: '#/components/schemas/Survey'
    
    Quota:
      type: object
      properties:
        id:
          type: integer
          format: int32
        surveyId:
          type: integer
          format: int32
        name:
          type: string
        sampleNumber:
          type: integer
          format: int32
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        clientQuotaId:
          type: string
          nullable: true
        starts:
          type: integer
          format: int32
          nullable: true
        completes:
          type: integer
          format: int32
          nullable: true
        remainingSampleRequired:
          type: integer
          format: int32
          nullable: true
        quotaCpi:
          type: array
          items:
            type: number
            format: float
          nullable: true
        quotaTarget:
          type: integer
          format: int32
          nullable: true
        conditions:
          $ref: "#/components/schemas/Quota"
    QuotaCreateRequest:
      type: object
      required:
        - name
        - sampleNumber
        - isActive
      properties:
        name:
          type: string
        sampleNumber:
          type: integer
          format: int32
        isActive:
          type: boolean
        clientQuotaId:
          type: string
        starts:
          type: integer
          format: int32
        completes:
          type: integer
          format: int32
        remainingSampleRequired:
          type: integer
          format: int32
        quotaCpi:
          type: array
          items:
            type: number
            format: float
        quotaTarget:
          type: integer
          format: int32
    
    QuotaUpdateRequest:
      type: object
      properties:
        name:
          type: string
        sampleNumber:
          type: integer
          format: int32
        isActive:
          type: boolean
        clientQuotaId:
          type: string
        starts:
          type: integer
          format: int32
        completes:
          type: integer
          format: int32
        remainingSampleRequired:
          type: integer
          format: int32
        quotaCpi:
          type: array
          items:
            type: number
            format: float
        quotaTarget:
          type: integer
          format: int32
        conditions:
          $ref: "#/components/schemas/QuotaConditionUpdateRequest"
    QuotaResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                quota:
                  $ref: '#/components/schemas/Quota'
    
    QuotaListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                length:
                  type: integer
                  description: Number of quotas returned
                quotas:
                  type: array
                  items:
                    $ref: '#/components/schemas/Quota'
    
    QuotaCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        surveyQuotaId:
          type: integer
          format: int32
        qualificationId:
          type: integer
          format: int32
        answerId:
          type: integer
          format: int32
          nullable: true
        answerText:
          type: string
          nullable: true
        createdBy:
          type: integer
          format: int32
          nullable: true
        updatedBy:
          type: integer
          format: int32
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        answerCode:
          type: integer
          format: int32
          nullable: true
        isActive:
          type: boolean
          nullable: true
    
    QuotaConditionCreateRequest:
      type: object
      required:
        - qualificationId
      properties:
        qualificationId:
          type: integer
          format: int32
        answerId:
          type: integer
          format: int32
        answerText:
          type: string
        answerCode:
          type: integer
          format: int32
        isActive:
          type: boolean
    
    QuotaConditionUpdateRequest:
      type: object
      properties:
        qualificationId:
          type: integer
          format: int32
        answerId:
          type: integer
          format: int32
        answerText:
          type: string
        answerCode:
          type: integer
          format: int32
        isActive:
          type: boolean
    
    QuotaConditionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                condition:
                  $ref: '#/components/schemas/QuotaCondition'
    
    QuotaConditionListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                length:
                  type: integer
                  description: Number of conditions returned
                conditions:
                  type: array
                  items:
                    $ref: '#/components/schemas/QuotaCondition'

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            badRequest:
              value:
                success: false
                message: "Invalid request parameters"
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "Name is required"
    
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            unauthorized:
              value:
                success: false
                message: "Authentication required"
    
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            forbidden:
              value:
                success: false
                message: "Access denied"
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            notFound:
              value:
                success: false
                message: "Project not found"
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            serverError:
              value:
                success: false
                message: "Internal server error"
                errors:
                  - code: "SERVER_ERROR"
                    message: "Something went wrong"